name: proofpack-metrics
on:
  push:
  schedule:
    # 18:30 UTC = 00:00 IST (midnight)
    - cron: "30 18 * * *"

permissions:
  contents: write   # allow committing back to the repo

jobs:
  metrics:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Ensure dirs
        run: |
          mkdir -p public public/badges

      # Generate metrics.json from results.csv if present, else 0/0
      - name: Generate metrics.json
        run: |
          python - <<'PY'
          import csv, json, time, pathlib
          p = pathlib.Path("04_experiments/results.csv")
          rows = []
          if p.exists():
            rows = list(csv.DictReader(p.read_text(encoding="utf-8").splitlines()))
          sessions = len(rows)
          try:
            success = (sum(float(r.get("citation_alignment", 0) or 0) >= 0.7 for r in rows) / sessions) if sessions else 0.0
          except Exception:
            success = 0.0
          pathlib.Path("public").mkdir(parents=True, exist_ok=True)
          (pathlib.Path("public")/"metrics.json").write_text(json.dumps({
            "sessions": sessions,
            "success_rate": success,
            "updated_at": time.strftime("%Y-%m-%d %H:%M:%S")
          }), encoding="utf-8")
          print("wrote public/metrics.json (sessions=%d, success=%.2f)" % (sessions, success))
          PY

      # Generate badge endpoints from metrics.json
      - name: Generate badge endpoints
        run: |
          python - <<'PY'
          import json, pathlib
          m = json.loads(pathlib.Path("public/metrics.json").read_text(encoding="utf-8"))
          sessions = int(m.get("sessions", 0) or 0)
          sr = float(m.get("success_rate", 0.0) or 0.0)
          pct = round(sr * 100)
          if   pct >= 90: color = "brightgreen"
          elif pct >= 80: color = "green"
          elif pct >= 70: color = "yellowgreen"
          elif pct >= 60: color = "yellow"
          elif pct >= 50: color = "orange"
          else:           color = "red"
          badges = pathlib.Path("public/badges")
          badges.mkdir(parents=True, exist_ok=True)
          (badges/"success.json").write_text(json.dumps({
            "schemaVersion": 1, "label": "Success", "message": f"{pct}%", "color": color
          }), encoding="utf-8")
          (badges/"sessions.json").write_text(json.dumps({
            "schemaVersion": 1, "label": "Sessions", "message": str(sessions), "color": "informational"
          }), encoding="utf-8")
          print("wrote public/badges/success.json and sessions.json")
          PY

      - name: Commit metrics & badges
        run: |
          git config user.name "proofpack-bot"
          git config user.email "bot@users.noreply.github.com"
          git add public/metrics.json public/badges/*.json || true
          git commit -m "chore: refresh telemetry" || echo "no changes"
          git push
